{
  "name": "project-dev",
  "dockerComposeFile": ["docker-compose.yml"],
  "service": "vscode",
  "runServices": ["vscode"],
  "shutdownAction": "stopCompose",
  // "postCreateCommand": "go mod download",
  "workspaceFolder": "/workspace",
  // "overrideCommand": "",
  "extensions": [
    "aaron-bond.better-comments",
    "abdelaziz18003.quasar-snippets",
    "akamud.vscode-theme-onedark",
    "alefragnani.project-manager",
    "christian-kohler.path-intellisense",
    "CoenraadS.bracket-pair-colorizer",
    "CoenraadS.bracket-pair-colorizer-2",
    "DavidAnson.vscode-markdownlint",
    "dbaeumer.vscode-eslint",
    "dsznajder.es7-react-js-snippets",
    "eamodio.gitlens",
    "EditorConfig.EditorConfig",
    "Equinusocio.vsc-material-theme",
    "esbenp.prettier-vscode",
    "formulahendry.auto-close-tag",
    "formulahendry.auto-rename-tag",
    "hollowtree.vue-snippets",
    "Mikael.Angular-BeastCode",
    "ms-azuretools.vscode-docker",
    "ms-python.python",
    "ms-vscode-remote.remote-containers",
    "ms-vscode-remote.remote-ssh",
    "ms-vscode-remote.remote-ssh-edit",
    "ms-vscode-remote.remote-wsl",
    "ms-vscode-remote.vscode-remote-extensionpack",
    "ms-vscode.cpptools",
    "ms-vscode.Go",
    "ms-vscode.vscode-typescript-tslint-plugin",
    "msjsdiag.debugger-for-chrome",
    "octref.vetur",
    "PKief.material-icon-theme",
    "ritwickdey.LiveServer",
    "Shan.code-settings-sync",
    "streetsidesoftware.code-spell-checker",
    "sysoev.language-stylus",
    "vuetifyjs.vuetify-vscode",
    "wwm.better-align",
    "xabikos.JavaScriptSnippets"
  ],
  "settings": {
    // General settings
    "files.eol": "\n",
    // Docker
    "remote.extensionKind": {
      "ms-azuretools.vscode-docker": "workspace"
    },
    // Golang general settings
    "go.useLanguageServer": true,
    "go.autocompleteUnimportedPackages": true,
    "go.gotoSymbol.includeImports": true,
    "go.gotoSymbol.includeGoroot": true,
    "gopls": {
      "completeUnimported": true,
      "deepCompletion": true,
      "usePlaceholders": false
    },
    // Golang on save
    "go.buildOnSave": "package",
    "go.lintOnSave": "package",
    "go.vetOnSave": "package",
    "editor.formatOnSave": true,
    "[go]": {
      "editor.codeActionsOnSave": {
        "source.organizeImports": true
      }
    },
    // Golang testing
    "go.toolsEnvVars": {
      "GOFLAGS": "-tags=integration"
    },
    "gopls.env": {
      "GOFLAGS": "-tags=integration"
    },
    "go.testEnvVars": {},
    "go.testFlags": ["-v"],
    "go.testTimeout": "600s"
  }
}
